{"version":3,"sources":["auth/authContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","components/ui/Navbar.js","components/hero/HeroCard.js","data/heroes.js","components/hero/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/hero/HeroScreen.js","selectors/getHeroById.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","children","user","useContext","useLocation","pathname","search","localStorage","setItem","to","PublicRoute","LoginScreen","navigate","useNavigate","dispatch","className","onClick","name","lastPath","getItem","replace","Navbar","isActive","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","imagePath","src","alt","heroes","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","MarvelScreen","SearchScreen","location","queryString","parse","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","length","HeroScreen","heroeId","useParams","find","getHeroById","DashboardRoutes","path","element","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"yJAEaA,EAAcC,0B,OCFdC,EACF,eADEA,EAED,gBCYCC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKJ,EACD,OAAO,2BACAG,EAAOE,SADd,IAEIC,QAAQ,IAEhB,KAAKN,EACD,MAAO,CACHM,QAAQ,GAEhB,QACI,OAAOJ,I,qBCtBNK,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEnBC,EAASC,qBAAWZ,GAApBW,KAER,EAA6BE,cAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAIlB,OAFAC,aAAaC,QAAQ,WAAYH,EAAWC,GAErCJ,EAAKH,OACNE,EACA,cAAC,IAAD,CAAUQ,GAAG,YCVVC,EAAc,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAI1B,OAFiBE,qBAAWZ,GAApBW,KAEIH,OACN,cAAC,IAAD,CAAUU,GAAG,YACbR,GCLGU,EAAc,WAEvB,IAAMC,EAAWC,cAETC,EAAaX,qBAAWZ,GAAxBuB,SAqBR,OACI,sBAAKC,UAAU,iBAAf,UACI,8CACA,uBAEA,wBACIA,UAAU,kBACVC,QA1BQ,WAShBF,EAPe,CACXjB,KAAMJ,EACNK,QAAS,CACLmB,KAAM,YAMd,IAAMC,EAAWX,aAAaY,QAAQ,aAAe,UAErDP,EAASM,EAAU,CACfE,SAAS,KAUT,uBC7BCC,EAAS,WAElB,MAA2BlB,qBAAWZ,GAA9BW,EAAR,EAAQA,KAAMY,EAAd,EAAcA,SAERF,EAAWC,cAajB,OACI,sBAAKE,UAAU,8CAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACVN,GAAG,IAFP,0BAOA,qBAAKM,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACIA,UAAW,kBAAkB,sBAAlB,EAAGO,SAAkD,SAAW,KAC3Eb,GAAG,UAFP,oBAOA,cAAC,IAAD,CACIM,UAAW,kBAAkB,sBAAlB,EAAGO,SAAkD,SAAW,KAC3Eb,GAAG,MAFP,gBAOA,cAAC,IAAD,CACIM,UAAW,kBAAkB,sBAAlB,EAAGO,SAAkD,SAAW,KAC3Eb,GAAG,UAFP,yBASR,qBAAKM,UAAU,mFAAf,SACI,qBAAIA,UAAU,qBAAd,UAEI,sBAAMA,UAAU,8BAAhB,SACKb,EAAKe,OAGV,wBACIF,UAAU,wBACVC,QAxDC,WAEjBF,EAAS,CACLjB,KAAMJ,IAGVmB,EAAS,SAAU,CACfQ,SAAS,KA+CD,6BChEPG,EAAW,SAAC,GAOlB,IANHC,EAME,EANFA,GACAC,EAKE,EALFA,UAEAC,GAGE,EAJFC,UAIE,EAHFD,WACAE,EAEE,EAFFA,iBACAC,EACE,EADFA,WAGMC,EAAS,kBAAcN,EAAd,QAEf,OACI,qBAAKT,UAAU,wCAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKgB,IAAKD,EAAWf,UAAU,WAAWiB,IAAKP,MAEnD,qBAAKV,UAAU,QAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BU,IAC5B,mBAAGV,UAAU,YAAb,SAA0BW,IAGrBA,IAAcG,GACf,mBAAGd,UAAU,aAAb,SAA2Bc,IAG/B,mBAAGd,UAAU,YAAb,SACI,uBAAOA,UAAU,aAAjB,SAA+Ba,MAGnC,cAAC,IAAD,CAAMnB,GAAE,gBAAWe,GAAnB,oCClCfS,EAAS,CAClB,CACI,GAAM,YACN,UAAa,SACb,UAAa,YACb,UAAa,cACb,iBAAoB,uBACpB,WAAc,eAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,YACb,UAAa,SACb,iBAAoB,mBACpB,WAAc,UAElB,CACI,GAAM,WACN,UAAa,QACb,UAAa,YACb,UAAa,cACb,iBAAoB,kBACpB,WAAc,oDAElB,CACI,GAAM,WACN,UAAa,gBACb,UAAa,YACb,UAAa,aACb,iBAAoB,0BACpB,WAAc,6FAElB,CACI,GAAM,WACN,UAAa,cACb,UAAa,YACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,YACN,UAAa,eACb,UAAa,YACb,UAAa,iBACb,iBAAoB,qBACpB,WAAc,kBAElB,CACI,GAAM,aACN,UAAa,oBACb,UAAa,YACb,UAAa,eACb,iBAAoB,wBACpB,WAAc,qBAElB,CACI,GAAM,WACN,UAAa,kBACb,UAAa,YACb,UAAa,eACb,iBAAoB,uBACpB,WAAc,gBAElB,CACI,GAAM,UACN,UAAa,cACb,UAAa,YACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,qCAElB,CACI,GAAM,WACN,UAAa,eACb,UAAa,YACb,UAAa,cACb,iBAAoB,mBACpB,WAAc,4BAElB,CACI,GAAM,gBACN,UAAa,aACb,UAAa,gBACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,iBACN,UAAa,kBACb,UAAa,gBACb,UAAa,eACb,iBAAoB,4BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,gBACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,cAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,0BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,yBACpB,WAAc,gBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,2BACpB,WAAc,iBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,0BACb,iBAAoB,eACpB,WAAc,2BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,yBACb,iBAAoB,wBACpB,WAAc,0BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,WACpB,WAAc,iBAElB,CACI,GAAM,gBACN,UAAa,gBACb,UAAa,gBACb,UAAa,cACb,iBAAoB,yBACpB,WAAc,gBC1JTC,EAAW,SAAC,GAAmB,IAAjBP,EAAgB,EAAhBA,UAEjBM,EAASE,mBAAQ,kBCLS,SAACR,GAIjC,IAFwB,CAAC,YAAa,iBAEjBS,SAAST,GAC1B,MAAM,IAAIU,MAAJ,UAAaV,EAAb,8BAGV,OAAOM,EAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKZ,YAAcA,KDHnBa,CAAqBb,KAAY,CAACA,IAE/D,OACI,qBAAKZ,UAAU,sEAAf,SAEQkB,EAAOQ,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,eAEQA,GADCA,EAAKf,UEZrBkB,EAAW,WACpB,OACI,gCACI,2CACA,uBAEA,cAAC,EAAD,CAAUf,UAAU,kBCNnBgB,EAAe,WACxB,OACI,gCACI,+CACA,uBAEA,cAAC,EAAD,CAAUhB,UAAU,sB,wBCAnBiB,EAAe,WAExB,IAAMhC,EAAWC,cACXgC,EAAWzC,cAEjB,EAAmB0C,IAAYC,MAAMF,EAASvC,QAAtC0C,SAAR,MAAY,GAAZ,EAEA,ECZmB,WAAwB,IAAvBC,EAAsB,uDAAP,GAEnC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAgBA,MAAO,CAACD,EATkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOpC,KAAOoC,EAAOC,UAThB,WACVF,EAAUH,KDO0BM,CAAQ,CAC5CC,WAAYR,IADhB,mBAAOS,EAAP,KAAmBC,EAAnB,KAIQF,EAAeC,EAAfD,WAEFG,EAAiBxB,mBAAQ,kBEnBJ,WAAgB,IAAflB,EAAc,uDAAP,GAEnC,MAAa,KAATA,EACO,IAGXA,EAAOA,EAAK2C,cACL3B,EAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKd,UAAUmC,cAAcxB,SAASnB,OFY9B4C,CAAgBb,KAAI,CAACA,IAO1D,OACI,qCACI,8CACA,uBAEA,sBAAKjC,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wCACA,uBAEA,uBAAM+C,SAfD,SAACC,GAClBA,EAAEC,iBACFpD,EAAS,MAAD,OAAO4C,KAaH,UACI,uBACI3D,KAAK,OACLoE,YAAY,qBACZlD,UAAU,eACVE,KAAK,aACLiD,aAAa,MACbZ,MAAOE,EACPW,SAAUT,IAGd,wBACI7D,KAAK,SACLkB,UAAU,+BAFd,6BASR,sBAAKA,UAAU,QAAf,UACI,4CACA,uBAGW,KAANiC,EACK,qBAAKjC,UAAU,mBAAf,gCAC2B,IAA1B4C,EAAeS,QAAiB,sBAAKrD,UAAU,qBAAf,gCAAwDiC,KAI/FW,EAAelB,KAAI,SAAAF,GAAI,OACnB,cAAC,EAAD,eAEQA,GADCA,EAAKf,iBGnE7B6C,EAAa,WAEtB,IAAQC,EAAYC,cAAZD,QACF1D,EAAWC,cAEX0B,EAAOJ,mBAAQ,kBCPE,WAAc,IAAbX,EAAY,uDAAP,GAC7B,OAAOS,EAAOuC,MAAK,SAAAjC,GAAI,OAAIA,EAAKf,KAAOA,KDMZiD,CAAYH,KAAU,CAACA,IAMlD,IAAK/B,EACD,OAAO,cAAC,IAAD,CAAU9B,GAAG,MAGxB,IAAQe,EAAsEe,EAAtEf,GAAIC,EAAkEc,EAAlEd,UAAWE,EAAuDY,EAAvDZ,UAAWD,EAA4Ca,EAA5Cb,UAAWE,EAAiCW,EAAjCX,iBAAkBC,EAAeU,EAAfV,WAEzDC,EAAS,kBAAcN,EAAd,QAEf,OACI,sBAAKT,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBACIgB,IAAKD,EACLE,IAAKP,EACLV,UAAU,0DAGlB,sBAAKA,UAAU,0CAAf,UACI,6BAAKU,IACL,qBAAIV,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,4CAAmBW,KACnD,qBAAIX,UAAU,kBAAd,UAAgC,4CAAmBY,KACnD,qBAAIZ,UAAU,kBAAd,UAAgC,mDAA0Ba,QAG9D,oBAAIb,UAAU,OAAd,wBACA,4BAAIc,IAEJ,wBACId,UAAU,uBACVC,QAlCK,WACjBJ,GAAU,IA+BF,6BEjCH8D,EAAkB,WAC3B,OACI,qCACI,cAAC,EAAD,IAEA,qBAAK3D,UAAU,YAAf,SAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4D,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,EAAD,MAE1B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MAErC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eChBhCC,EAAY,WACrB,OAKI,aAHA,CAGC,IAAD,UAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CACIF,KAAK,SACLC,QAEI,cAAC,EAAD,UACI,cAAC,EAAD,QAOZ,cAAC,IAAD,CACID,KAAK,KACLC,QAEI,cAAC,EAAD,UACI,cAAC,EAAD,cC9BtBE,EAAO,WACT,OAAOC,KAAKhC,MAAMxC,aAAaY,QAAQ,UAAY,CAAEpB,QAAQ,IAGpDiF,EAAY,WAErB,MAAyBC,qBAAWvF,EAAa,GAAIoF,GAArD,mBAAO5E,EAAP,KAAaY,EAAb,KAOA,OALAoE,qBAAU,WACDhF,GACLK,aAAaC,QAAQ,OAAQuE,KAAKI,UAAUjF,MAC7C,CAACA,IAGA,cAACX,EAAY6F,SAAb,CAAsB9B,MAAO,CACzBpD,OACAY,YAFJ,SAII,cAAC,EAAD,OClBZuE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b5b3e8a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","export const types = {\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n// const state = {\r\n//     name: 'Carlos',\r\n//     logged: true\r\n// }\r\n\r\n// const loginAction = {\r\n//     type: types.login,\r\n//     payload: {\r\n//         name: 'Carlos'\r\n//     }\r\n// }\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/authContext\";\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    const { pathname, search } = useLocation();\r\n\r\n    localStorage.setItem('lastPath', pathname + search);\r\n\r\n    return user.logged\r\n        ? children\r\n        : <Navigate to=\"/login\" />\r\n}","import { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/authContext\";\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return user.logged\r\n        ? <Navigate to=\"/marvel\" />\r\n        : children\r\n}","import { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../auth/authContext\";\r\nimport { types } from \"../../types/types\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n\r\n        const action = {\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Carlos'\r\n            }\r\n        }\r\n\r\n        dispatch(action);\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/marvel';\r\n\r\n        navigate(lastPath, {\r\n            replace: true\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user, dispatch } = useContext(AuthContext);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n\r\n        navigate('/login', {\r\n            replace: true\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n            <Link\r\n                className=\"navbar-brand\"\r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink\r\n                        className={({ isActive }) => \"nav-item nav-link \" + (isActive ? 'active' : '')}\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        className={({ isActive }) => \"nav-item nav-link \" + (isActive ? 'active' : '')}\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        className={({ isActive }) => \"nav-item nav-link \" + (isActive ? 'active' : '')}\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {user.name}\r\n                    </span>\r\n\r\n                    <button\r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n\r\n    const imagePath = `/assets/${id}.jpg`;\r\n\r\n    return (\r\n        <div className=\"col animate__animated animate__fadeIn\">\r\n            <div className=\"card\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-4\">\r\n                        <img src={imagePath} className=\"card-img\" alt={superhero} />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{superhero}</h5>\r\n                            <p className=\"card-text\">{alter_ego}</p>\r\n\r\n                            {\r\n                                (alter_ego !== characters) &&\r\n                                <p className=\"text-muted\">{characters}</p>\r\n                            }\r\n\r\n                            <p className=\"card-text\">\r\n                                <small className=\"text-muted\">{first_appearance}</small>\r\n                            </p>\r\n\r\n                            <Link to={`/hero/${id}`}>\r\n                                Más...\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero': 'Batman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Bruce Wayne',\r\n        'first_appearance': 'Detective Comics #27',\r\n        'characters': 'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero': 'Superman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Kal-El',\r\n        'first_appearance': 'Action Comics #1',\r\n        'characters': 'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero': 'Flash',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Jay Garrick',\r\n        'first_appearance': 'Flash Comics #1',\r\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero': 'Green Lantern',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Alan Scott',\r\n        'first_appearance': 'All-American Comics #16',\r\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero': 'Green Arrow',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Oliver Queen',\r\n        'first_appearance': 'More Fun Comics #73',\r\n        'characters': 'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero': 'Wonder Woman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Princess Diana',\r\n        'first_appearance': 'All Star Comics #8',\r\n        'characters': 'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero': 'Martian Manhunter',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'J\\'onn J\\'onzz',\r\n        'first_appearance': 'Detective Comics #225',\r\n        'characters': 'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero': 'Robin/Nightwing',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dick Grayson',\r\n        'first_appearance': 'Detective Comics #38',\r\n        'characters': 'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero': 'Blue Beetle',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dan Garret',\r\n        'first_appearance': 'Mystery Men Comics #1',\r\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero': 'Black Canary',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dinah Drake',\r\n        'first_appearance': 'Flash Comics #86',\r\n        'characters': 'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero': 'Spider Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Peter Parker',\r\n        'first_appearance': 'Amazing Fantasy #15',\r\n        'characters': 'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero': 'Captain America',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Steve Rogers',\r\n        'first_appearance': 'Captain America Comics #1',\r\n        'characters': 'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero': 'Iron Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Tony Stark',\r\n        'first_appearance': 'Tales of Suspense #39',\r\n        'characters': 'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero': 'Thor',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Thor Odinson',\r\n        'first_appearance': 'Journey into Myster #83',\r\n        'characters': 'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero': 'Hulk',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Bruce Banner',\r\n        'first_appearance': 'The Incredible Hulk #1',\r\n        'characters': 'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero': 'Wolverine',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'James Howlett',\r\n        'first_appearance': 'The Incredible Hulk #180',\r\n        'characters': 'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero': 'Daredevil',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Matthew Michael Murdock',\r\n        'first_appearance': 'Daredevil #1',\r\n        'characters': 'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero': 'Hawkeye',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Clinton Francis Barton',\r\n        'first_appearance': 'Tales of Suspense #57',\r\n        'characters': 'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero': 'Cyclops',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Scott Summers',\r\n        'first_appearance': 'X-Men #1',\r\n        'characters': 'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero': 'Silver Surfer',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Norrin Radd',\r\n        'first_appearance': 'The Fantastic Four #48',\r\n        'characters': 'Norrin Radd'\r\n    }\r\n]","import { useMemo } from \"react\";\r\n\r\nimport { HeroCard } from \"./HeroCard\";\r\nimport { getHeroesByPublisher } from \"../../selectors/getHeroesByPublisher\";\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\r\n\r\n    return (\r\n        <div className=\"row rows-cols-1 row-cols-md-3 g-3 animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)) {\r\n        throw new Error(`${publisher} is not a valid publisher`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}","import { HeroList } from \"../hero/HeroList\"\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher=\"DC Comics\" />\r\n        </div>\r\n    )\r\n}","import { HeroList } from \"../hero/HeroList\";\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n            \r\n            <HeroList publisher=\"Marvel Comics\" />\r\n        </div>\r\n    )\r\n}","import { useMemo } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport queryString from 'query-string';\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { getHeroesByName } from \"../../selectors/getHeroesByName\";\r\nimport { HeroCard } from \"../hero/HeroCard\";\r\n\r\nexport const SearchScreen = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        navigate(`?q=${searchText}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Búsquedas</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Buscar</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Buscar un héroe\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-outline-primary mt-1\"\r\n                        >\r\n                            Buscar...\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Resultados</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                            ? <div className=\"alert alert-info\">Buscar un héroe</div>\r\n                            : (heroesFiltered.length === 0) && <div className=\"alert alert-danger\">No hay resultados: {q}</div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n\r\n    if (name === '') {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLowerCase().includes(name));\r\n\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { useParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { getHeroById } from \"../../selectors/getHeroById\";\r\n\r\nexport const HeroScreen = () => {\r\n\r\n    const { heroeId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId]);\r\n\r\n    const handleReturn = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    if (!hero) {\r\n        return <Navigate to='/' />\r\n    }\r\n\r\n    const { id, superhero, publisher, alter_ego, first_appearance, characters } = hero;\r\n\r\n    const imagePath = `/assets/${id}.jpg`;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={imagePath}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b>{alter_ego}</li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b>{publisher}</li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b>{first_appearance}</li>\r\n                </ul>\r\n\r\n                <h5 className=\"mt-3\">Characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Regresar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = (id = '') => {\r\n    return heroes.find(hero => hero.id === id);\r\n}","import { Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Navbar } from \"../components/ui/Navbar\";\r\n\r\nimport { DcScreen } from \"../components/dc/DcScreen\";\r\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\r\nimport { SearchScreen } from \"../components/search/SearchScreen\";\r\nimport { HeroScreen } from \"../components/hero/HeroScreen\";\r\n\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container\">\r\n\r\n                <Routes>\r\n                    <Route path=\"marvel\" element={<MarvelScreen />} />\r\n                    <Route path=\"dc\" element={<DcScreen />} />\r\n\r\n                    <Route path=\"search\" element={<SearchScreen />} />\r\n                    <Route path=\"hero/:heroeId\" element={<HeroScreen />} />\r\n\r\n                    <Route path=\"/\" element={<MarvelScreen />} />\r\n\r\n                </Routes>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import { Routes, Route, BrowserRouter/*, HashRouter*/ } from \"react-router-dom\";\r\n\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n\r\n        // Para desplegar la aplicación en GitHub Pages\r\n        // <HashRouter>\r\n\r\n        <BrowserRouter>\r\n\r\n            <Routes>\r\n\r\n                <Route\r\n                    path=\"/login\"\r\n                    element=\r\n                    {\r\n                        <PublicRoute>\r\n                            <LoginScreen />\r\n                        </PublicRoute>\r\n                    }\r\n                />\r\n\r\n                {/* <Route path=\"/login\" element={<LoginScreen />} /> */}\r\n\r\n                <Route\r\n                    path=\"/*\"\r\n                    element=\r\n                    {\r\n                        <PrivateRoute>\r\n                            <DashboardRoutes />\r\n                        </PrivateRoute>\r\n                    }\r\n                />\r\n\r\n                {/* <Route path=\"/*\" element={<DashboardRoutes />} /> */}\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n\r\n        // </HashRouter>\r\n\r\n    )\r\n}","import { useEffect, useReducer } from \"react\";\r\nimport { AuthContext } from \"./auth/authContext\";\r\nimport { authReducer } from \"./auth/authReducer\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            dispatch\r\n        }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}